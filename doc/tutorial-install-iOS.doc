/**

\page tutorial-install-iOS Tutorial: Installation from source on OSX for iOS devices
\tableofcontents

In this tutorial you will learn how to install ViSP from source on OSX in order to be able to compile and use it for iOS development. These steps have been tested for OSX 10.8.4  but should work with any other distribution as well.

\note Concerning ViSP installation, we provide also other \ref tutorial.

\section install_iOS_required Install required software

- CMake gui 2.8 for OSX or higher that could be download at : http://www.cmake.org

\section install_iOS_3rd_party Install optional packages

ViSP is interfaced with several 3rd party libraries. The <a href="http://visp.inria.fr/software-architecture">complete list is provided here</a>. We recommend to install the following:

- OpenCV: get OpenCV for iOS Version 2.4.3 or later in http://opencv.org/downloads.html

- liblapack, libxml2, libjpeg, libpng, ffmpeg should be already included in your OS X package

\section install_iOS_install_visp Install ViSP from source code
\subsection install_iOS_get_source Getting ViSP source code

There are different ways to get ViSP source code:

- You can download the <a href="http://visp.inria.fr/download">latest release</a> as a zip or a tarball. Once downloaded, uncompress the file using either
\code
tar xvzf visp-x.y.z.tar.gz 
\endcode
or
\code
unzip visp-x.y.z.zip
\endcode

- You can also download a <a href="http://visp.inria.fr/download#snapshot">daily snapshot</a>. Once downloaded, uncompress the file using
\code
tar xvzf visp-snapshot-yyyy-mm-dd.tar.gz
\endcode

- Or you get the cutting-edge ViSP from <a href="https://github.com/lagadic/visp">GitHub repository</a> using the following command
\code
$ git clone https://github.com/lagadic/visp.git
\endcode

We suppose now that ViSP source is in a directory denoted  \<source_dir\>, for example \c $HOME/visp

\subsection install_iOS_config Configuring ViSP from source

- Choose the right path for the \<source_dir\> and the \<binary_dir\> in c-make gui.

  \image html img-configure-path-iOS.png

- Press Configure on c-make gui to validate your configuration, choose Xcode as the generator for the project and press Done.

  \image html img-configure-generator-iOS.png

- Make sure that USE_X11 is unchecked because we will not use the display part of visp for iOS, and USE_COIN is unchecked unless your really need it because their is a known bug on the OSX Coin package.

  \image html img-configure-options-iOS.png

- Press Configure again. Now we can finish the configuration stage by generating the Xcode project.
- To generate the Xcode project press Generate on c-make gui. From now, c-make gui can be closed.

\subsection install_iOS_build Building ViSP library
\subsubsection getting-started-iOS-configure Open and configure ViSP Xcode project

Launch Xcode (Version 4.6.2) and open ViSP.xcodeproj that should be in the \<binary_dir\> where you previously built ViSP sources.

Open the VISP Project File at the top of your hierarchy in order to configure the project and select the visp target.

\image html img-getting-started-iOS-project.png

In the Architectures group, edit the following information in this order :
- Base SDK : Latest iOS
- Supported Platforms : iOS
- Architectures : Standard (armv7, armv7s)

\image html img-getting-started-iOS-architectures.png

\subsubsection getting-started-iOS-generate Generate ViSP library

Now that you have correctly configured your project, choose the visp target  and press run.

\image html img-getting-started-iOS-run.png

\section install_iOS_next Next tutorial

You are now ready to see the next \ref tutorial-getting-started-iOS that will show you how to use ViSP as a 3rd party to build your own project.

*/
